server {
  listen          8080;
  server_name     0.0.0.0;
  error_page      500 502 503 504  /50x.html;
  error_page      404 /index.html;
  charset         utf-8;
  source_charset  utf-8;
  charset_types   text/css text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml image/svg+xml;

  gzip on;
  gzip_static on;
  gzip_proxied any;
  gzip_min_length 1k;
  gzip_buffers 4 16k;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
  gzip_vary off;
  gzip_disable "MSIE [1-6]\.";

  brotli on;
  brotli_comp_level 6;
  brotli_buffers 16 8k;
  brotli_min_length 20;
  brotli_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;


  # Allow Envato demo Iframe X-Frame-Options, you may want to remove this
  proxy_hide_header   X-Frame-Options;
  add_header          X-Frame-Options "";

  # Media: images, icons, video, audio, HTC
  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|webp|htc|ttf|eot|woff|woff2)$ {
    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay on;
    access_log  off;
    add_header  Cache-Control "max-age=31536000, immutable";
    add_header  X-Content-Type-Options "nosniff";

    try_files $uri =404;
  }

  # CSS and Javascript
  location ~* \.(?:css|js)$ {
    access_log off;
    add_header Cache-Control "max-age=31536000, immutable";
    add_header X-Content-Type-Options "nosniff";

    try_files $uri =404;
  }

  # Return 404 status code if uri contains 404
  location ~ 404 {
    return 404;
  }

  # Allow performing POST requests on static JSON files
  location ~* \.(?:json)$ {
    error_page 405 =200 $uri;
  }

  location / {
    root        /app;
    index       index.html;
    add_header  Cache-Control "max-age=180, immutable";

    if ($request_filename ~* .*\.(?:htm|html)$) {
      add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate";
      access_log on;
    }

    try_files $uri $uri/ /index.html;
  }

  location /api {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # Api 서버 설정
    proxy_pass http://app$request_uri;
    proxy_redirect default;
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Headers X-Requested-With;
    add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS;
  }

  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}
